---
# Archivo de tareas para instalar y configurar oh-my-tmux
# Este playbook automatiza la instalación de tmux y oh-my-tmux tanto para el usuario root como para un usuario normal

# Primero, verificamos si tmux está instalado usando el gestor de paquetes apt
- name: Recolectar información de paquetes
  ansible.builtin.package_facts:
    manager: apt
  # Este módulo recopila información sobre los paquetes instalados en el sistema
  # Es necesario para poder verificar si tmux ya está instalado antes de intentar instalarlo

# Verificamos si tmux está instalado
- name: Verificar si tmux está instalado
  ansible.builtin.debug:
    var: "'tmux' in ansible_facts.packages"
  register: tmux_installed
  # Verifica si tmux está en la lista de paquetes instalados
  # Guarda el resultado en la variable tmux_installed para usarlo después
  # El módulo debug nos permite ver el resultado de la verificación

# Instalar tmux si no está presente en el sistema
- name: Instalar tmux con apt si no está instalado
  when: tmux_installed != "True"
  ansible.builtin.apt:
    name: tmux
    state: present
    update_cache: true
  register: tmux_installation
  # Solo se ejecuta si tmux no está instalado (cuando la verificación anterior fue falsa)
  # Actualiza la caché de apt para asegurar que tenemos la información más reciente
  # Instala la última versión disponible de tmux
  # Registra el resultado en tmux_installation para verificar después

# Verificar la instalación de tmux después de intentar instalarlo
- name: Verificar si tmux está instalado con apt después de instalarlo
  when: tmux_installation is changed
  ansible.builtin.package_facts:
    manager: apt
  register: post_install
  # Se ejecuta solo si la tarea de instalación realizó cambios en el sistema
  # Vuelve a verificar los paquetes instalados para confirmar la instalación
  # Guarda el resultado en post_install para la confirmación final

# Confirmar que tmux se instaló correctamente
- name: Confirmar la instalación de tmux
  ansible.builtin.debug:
    var: "'tmux' in post_install.ansible_facts.packages"
  # Muestra un mensaje confirmando si tmux está instalado correctamente
  # Usa los datos recopilados en el paso anterior para la verificación

# Instalación de oh-my-tmux para el usuario root
- name: Instalar oh-my-tmux vía git
  ansible.builtin.git:
    repo: https://github.com/gpakosz/.tmux.git
    dest: /root/.tmux
  become: true
  # Clona el repositorio de oh-my-tmux en el directorio .tmux del usuario root
  # become: true permite ejecutar esta tarea con privilegios de superusuario
  # El repositorio contiene la configuración personalizada de tmux

# Crear enlace simbólico para la configuración de oh-my-tmux (root)
- name: Instalar oh-my-tmux.conf vía enlace simbólico a /root/.tmux.conf
  ansible.builtin.file:
    src: /root/.tmux/.tmux.conf
    dest: /root/.tmux.conf
    state: link
    force: true
  become: true
  # Crea un enlace simbólico del archivo de configuración principal
  # force: true sobrescribe el enlace si ya existe
  # Este archivo contiene la configuración base de oh-my-tmux

# Copiar archivo de configuración local para root
- name: Copiar oh-my-tmux.conf.local a /root/.tmux.conf.local
  ansible.builtin.copy:
    src: /root/.tmux/.tmux.conf.local
    dest: /root/.tmux.conf.local
    remote_src: true
  become: true
  # Copia el archivo de configuración local que permite personalizaciones
  # remote_src: true indica que el archivo fuente está en el sistema remoto
  # Este archivo permite personalizar la configuración sin modificar el original

# Verificar que el archivo de configuración local existe para root
- name: Validar que el archivo oh-my-tmux.conf.local existe
  ansible.builtin.file:
    dest: /root/.tmux.conf.local
    state: file
  become: true
  # Confirma que el archivo de configuración local existe
  # Esta verificación asegura que la instalación se completó correctamente

# Las siguientes tareas realizan las mismas operaciones pero para el usuario ubuntu
# Instalación de oh-my-tmux para el usuario ubuntu
- name: Instalar oh-my-tmux vía git
  ansible.builtin.git:
    repo: https://github.com/gpakosz/.tmux.git
    dest: $HOME/.tmux
  become: true
  become_user: ubuntu
  # Clona el repositorio para el usuario ubuntu en su directorio home
  # become_user: ubuntu ejecuta esta tarea como el usuario ubuntu
  # $HOME se expande al directorio home del usuario ubuntu

# Crear enlace simbólico para la configuración (usuario ubuntu)
- name: Instalar oh-my-tmux.conf vía enlace simbólico a $HOME/.tmux.conf
  ansible.builtin.file:
    src: $HOME/.tmux/.tmux.conf
    dest: $HOME/.tmux.conf
    state: link
    force: true
  become_user: ubuntu
  # Crea el enlace simbólico para la configuración de ubuntu
  # Similar a la configuración de root pero en el directorio home de ubuntu
  # force: true asegura que el enlace se cree incluso si ya existe

# Copiar archivo de configuración local para usuario ubuntu
- name: Copiar oh-my-tmux.conf.local a $HOME/.tmux.conf.local
  ansible.builtin.copy:
    src: $HOME/.tmux/.tmux.conf.local
    dest: $HOME/.tmux.conf.local
    remote_src: true
  become_user: ubuntu
  # Copia el archivo de configuración local para el usuario ubuntu
  # Permite personalizaciones específicas para el usuario ubuntu
  # remote_src: true indica que el archivo fuente está en el sistema remoto

# Verificar que el archivo de configuración local existe para usuario ubuntu
- name: Validar que el archivo oh-my-tmux.conf.local existe
  ansible.builtin.file:
    dest: $HOME/.tmux.conf.local
    state: file
  become_user: ubuntu
  # Verifica que la configuración local existe para el usuario ubuntu
  # Asegura que la instalación para el usuario ubuntu se completó correctamente
  # Esta es la última verificación del proceso de instalación
