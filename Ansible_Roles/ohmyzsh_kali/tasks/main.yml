---
# archivo de tareas para oh-my-zsh

# Instalar fc-cache a través de apt para que se puedan agregar fuentes personalizadas al sistema operativo

- name: Loop a través de la instalación del paquete fontconfig (fc-cache)
  ansible.builtin.apt:
    update_cache: true
    pkg: "{{ item }}"
  loop:
    - fontconfig
    - build-essential
    - zsh
# Validar que los paquetes fontconfig (fc-cache) estén instalados y actualizados a la última versión

- name: Loop a través de la validación del paquete fontconfig (fc-cache)
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: latest
  loop:
    - fontconfig
    - build-essential
    - zsh
### Cargo proglang

# Validar que Cargo esté instalado a nivel de usuario con privilegios bajos

- name: Validar que Cargo esté instalado a nivel de usuario con privilegios bajos
  shell: command -v cargo
  register: cargo_exists
  ignore_errors: true
  no_log: true
# Descargar el instalador de Cargo en /tmp/sh.rustup.rs si no está instalado

- name: Descargar el instalador de Cargo en /tmp/sh.rustup.rs si no está instalado
  when: cargo_exists is failed
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/sh.rustup.rs
    mode: '0755'
    force: 'true'
  tags:
    - rust
  become: true

# Instalar rust/cargo para el usuario root

- name: Instalar rust/cargo para el usuario root
  when: cargo_exists is failed
  shell: ' /tmp/sh.rustup.rs -y  '
  tags:
    - rust
  become: true
  register: cargo_exists_as_root
# Depurar que Cargo fue instalado para root

- name: Depurar que Cargo fue instalado para root
  debug:
    msg: '{{ cargo_exists_as_root }}'
# Fuente $HOME/.cargo/env

- name: Fuente $HOME/.cargo/env
  shell: source $HOME/.cargo/env
  become: true
  args:
    executable: /bin/bash
# Instalar lsd con cargo para root

- name: Instalar lsd con cargo para root
  shell: source $HOME/.cargo/env && cargo install lsd
  become: true
  args:
    executable: /bin/bash
# Instalar bat con cargo para root

- name: Instalar bat con cargo para root
  shell: source $HOME/.cargo/env && cargo install bat
  become: true
  args:
    executable: /bin/bash
# Instalar exa con cargo para root

- name: Instalar exa con cargo para root
  shell: source $HOME/.cargo/env && cargo install exa
  become: true
  args:
    executable: /bin/bash

# Instalar rust/cargo para usuario con privilegios bajos

- name: Instalar rust/cargo para usuario con privilegios bajos
  when: cargo_exists is failed
  shell: ' /tmp/sh.rustup.rs -y  '
  tags:
    - rust
  become: false
  register: cargo_exists_as_user
# Depurar que Cargo fue instalado para usuario con privilegios bajos

- name: Depurar que Cargo fue instalado para usuario con privilegios bajos
  debug:
    msg: '{{ cargo_exists_as_user }}'
# Instalar lsd con cargo para usuario con privilegios bajos

- name: Instalar lsd con cargo para usuario con privilegios bajos
  shell: source $HOME/.cargo/env && cargo install lsd
  become: false
  args:
    executable: /bin/bash
# Instalar bat con cargo para usuario con privilegios bajos

- name: Instalar bat con cargo para usuario con privilegios bajos
  shell: source $HOME/.cargo/env && cargo install bat
  become: false
  args:
    executable: /bin/bash
# Instalar exa con cargo para usuario con privilegios bajos

- name: Instalar exa con cargo para usuario con privilegios bajos
  shell: source $HOME/.cargo/env && cargo install exa
  become: false
  args:
    executable: /bin/bash

# Descargar el instalador de oh-my-zsh en /tmp/install.sh si no está instalado

- name: Descargar el instalador de oh-my-zsh en /tmp/install.sh si no está instalado
  ansible.builtin.get_url:
    url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/install.sh
    mode: '0755'
    force: 'true'
  tags:
    - oh_my_zsh

# Instalar oh-my-zsh usando el script de instalación manual descargado en `/tmp/install.sh` para usuario con privilegios bajos y root

- name: Instalar oh-my-zsh usando el script de instalación manual descargado en `/tmp/install.sh`
  ansible.builtin.shell: ' /tmp/install.sh '
  tags:
    - oh_my_zsh
  ignore_errors: true
  register: oh_my_zsh_as_kali

# Verificar que oh-my-zsh se haya instalado correctamente para usuario con privilegios bajos

- name: Verificar que oh-my-zsh se haya instalado correctamente para usuario con privilegios bajos
  ansible.builtin.debug:
    msg: '{{ oh_my_zsh_as_kali }}'

# Descargar el instalador de oh-my-zsh en /tmp/install.sh si no está instalado

- name: Descargar el instalador de oh-my-zsh en /tmp/install.sh si no está instalado
  when: oh_my_zsh_as_kali is failed
  ansible.builtin.get_url:
    url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/install.sh
    mode: '0755'
    force: 'true'
  tags:
    - oh_my_zsh
  become: true

# Instalar oh-my-zsh usando el script de instalación manual descargado en `/tmp/install.sh` para root

- name: Instalar oh-my-zsh usando el script de instalación manual descargado en `/tmp/install.sh` para root
  ansible.builtin.shell: 'bash /tmp/install.sh '
  tags:
    - oh_my_zsh
  become: true
  register: oh_my_zsh_as_root
  ignore_errors: true

# Verificar que oh-my-zsh se haya instalado correctamente para root

- name: Verificar que oh-my-zsh se haya instalado correctamente para root
  ansible.builtin.debug:
    msg: '{{ oh_my_zsh_as_root }}'

# Instalar las fuentes recomendadas ["MesloLGS"](https://github.com/romkatv/powerlevel10k-media) -
# (cont.) según el método de instalación manual detallado en el README de [powerlevel10k](https://github.com/romkatv/powerlevel10k)

- name: Descargar MesloLGS NF Fonts Regular
  ansible.builtin.get_url:
    url: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf'
    dest: /usr/share/fonts/

- name: Descargar MesloLGS NF Fonts Bold
  ansible.builtin.get_url:
    url: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf'
    dest: /usr/share/fonts/

- name: Descargar MesloLGS NF Fonts Italic
  ansible.builtin.get_url:
    url: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf'
    dest: /usr/share/fonts/

- name: Descargar MesloLGS NF Fonts Bold Italic
  ansible.builtin.get_url:
    url: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf'
    dest: /usr/share/fonts/

# Actualizar la caché de fuentes para habilitar las fuentes en el sistema

- name: Actualizar la caché de fuentes
  ansible.builtin.shell: fc-cache -fv

# OMZ Tema y Plugins Personalizados
## Agregar tema y plugins personalizados al directorio .oh-my-zsh custom/themes y custom/plugins del usuario

# Instalar el [plugin sudo](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/sudo) en .oh-my-zsh/custom/plugins/sudo para usuario con privilegios bajos y root

# Crear el directorio del [plugin sudo](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/sudo) en .oh-my-zsh/custom/plugins/sudo para usuario con privilegios bajos

- name: Crear el directorio del plugin sudo en .oh-my-zsh/custom/plugins/sudo para usuario con privilegios bajos
  ansible.builtin.file:
    path: "$HOME/.oh-my-zsh/custom/plugins/sudo/"
    state: directory
    mode: '0755'
  become_user: kali

# Descargar el archivo .zsh del [plugin sudo](https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh) en el directorio creado en .oh-my-zsh/custom/plugins/sudo para usuario con privilegios bajos

- name: Descargar el archivo .zsh del plugin sudo en .oh-my-zsh/custom/plugins/sudo para usuario con privilegios bajos
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh"
    dest: "$HOME/.oh-my-zsh/custom/plugins/sudo/sudo.plugin.zsh"
    mode: '0755'
  become_user: kali

# Crear el directorio del [plugin sudo](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/sudo) en .oh-my-zsh/custom/plugins/sudo para root

- name: Crear el directorio del plugin sudo en .oh-my-zsh/custom/plugins/sudo para root
  ansible.builtin.file:
    path: "$HOME/.oh-my-zsh/custom/plugins/sudo/"
    state: directory
    mode: '0755'
  become: true

# Descargar el archivo .zsh del [plugin sudo](https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh) en el directorio creado en .oh-my-zsh/custom/plugins/sudo para root

- name: Descargar el archivo .zsh del plugin sudo en .oh-my-zsh/custom/plugins/sudo para root
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh"
    dest: "$HOME/.oh-my-zsh/custom/plugins/sudo/sudo.plugin.zsh"
    mode: '0755'
  become: true

# Instalar el [plugin zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting) en $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting para usuario con privilegios bajos

- name: Instalar el plugin zsh-syntax-highlighting en $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting para usuario con privilegios bajos
  become_user: kali
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

# Instalar el [plugin zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting) en /root/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting para root

- name: Instalar el plugin zsh-syntax-highlighting en /root/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting para root
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: /root/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

# Instalar el [plugin zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions.git) en $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions para usuario con privilegios bajos

- name: Instalar el plugin zsh-autosuggestions en $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions para usuario con privilegios bajos
  become_user: kali
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions

# Instalar el [plugin zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions.git) en /root/.oh-my-zsh/custom/plugins/zsh-autosuggestions para root

- name: Instalar el plugin zsh-autosuggestions en /root/.oh-my-zsh/custom/plugins/zsh-autosuggestions para root
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: /root/.oh-my-zsh/custom/plugins/zsh-autosuggestions

# Instalar el [plugin zsh-history-substring-search](https://github.com/zsh-users/zsh-history-substring-search.git) en $HOME/.oh-my-zsh/custom/plugins/zsh-history-substring-search para usuario con privilegios bajos

- name: Instalar el plugin zsh-history-substring-search en $HOME/.oh-my-zsh/custom/plugins/zsh-history-substring-search para usuario con privilegios bajos
  become_user: kali
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-history-substring-search.git
    dest: $HOME/.oh-my-zsh/custom/plugins/zsh-history-substring-search

# Instalar el [plugin zsh-history-substring-search](https://github.com/zsh-users/zsh-history-substring-search.git) en /root/.oh-my-zsh/custom/plugins/zsh-history-substring-search para root

- name: Instalar el plugin zsh-history-substring-search en /root/.oh-my-zsh/custom/plugins/zsh-history-substring-search para root
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-history-substring-search.git
    dest: /root/.oh-my-zsh/custom/plugins/zsh-history-substring-search

# Instalar el [plugin zsh-autocomplete](https://github.com/marlonrichert/zsh-autocomplete.git) en $HOME/.oh-my-zsh/custom/plugins/zsh-autocomplete para usuario con privilegios bajos

- name: Instalar el plugin zsh-autocomplete en $HOME/.oh-my-zsh/custom/plugins/zsh-autocomplete para usuario con privilegios bajos
  become_user: kali
  ansible.builtin.git:
    repo: https://github.com/marlonrichert/zsh-autocomplete.git
    dest: $HOME/.oh-my-zsh/custom/plugins/zsh-autocomplete

# Instalar el [plugin zsh-autocomplete](https://github.com/marlonrichert/zsh-autocomplete.git) en /root/.oh-my-zsh/custom/plugins/zsh-autocomplete para root

- name: Instalar el plugin zsh-autocomplete en /root/.oh-my-zsh/custom/plugins/zsh-autocomplete para root
  ansible.builtin.git:
    repo: https://github.com/marlonrichert/zsh-autocomplete.git
    dest: /root/.oh-my-zsh/custom/plugins/zsh-autocomplete

# Instalar el plugin fzf-zsh en $HOME/.oh-my-zsh/custom/plugins/fzf-zsh-plugin para usuario con privilegios bajos

- name: Instalar el plugin fzf-zsh en $HOME/.oh-my-zsh/custom/plugins/fzf-zsh-plugin para usuario con privilegios bajos
  become_user: kali
  ansible.builtin.git:
    repo: https://github.com/unixorn/fzf-zsh-plugin.git
    dest: $HOME/.oh-my-zsh/custom/plugins/fzf-zsh-plugin

# Instalar el plugin fzf-zsh en /root/.oh-my-zsh/custom/plugins/fzf-zsh-plugin para root

- name: Clonar el plugin fzf-zsh en el directorio de plugins personalizados de omz
  ansible.builtin.git:
    repo: https://github.com/unixorn/fzf-zsh-plugin.git
    dest: /root/.oh-my-zsh/custom/plugins/fzf-zsh-plugin

# Agregar el tema [powerlevel10k](https://github.com/romkatv/powerlevel10k.git) a `.oh-my-zsh/custom/themes/powerlevel10k`

- name: Clonar powerlevel10k en el directorio .oh-my-zsh/custom/themes/powerlevel10k como usuario con privilegios bajos
  become_user: kali
  ansible.builtin.git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: $HOME/.oh-my-zsh/custom/themes/powerlevel10k

- name: Clonar powerlevel10k en el directorio .oh-my-zsh/custom/themes/powerlevel10k como root
  ansible.builtin.git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: /root/.oh-my-zsh/custom/themes/powerlevel10k

# Agregar archivo .zshrc personalizado que contiene funciones, alias, directorios custom/themes y custom/plugins

- name: Copiar archivo .zshrc que contiene funciones personalizadas, alias y configuración del shell [usuario]
  become_user: kali
  ansible.builtin.copy:
    src: ../files/.zshrc
    dest: $HOME/.zshrc
    remote_src: false

- name: Copiar archivo .zshrc que contiene funciones personalizadas, alias y configuración del shell [root]
  become: true
  become_method: sudo
  ansible.builtin.copy:
    src: ../files/.zshrc
    dest: /root/.zshrc
    remote_src: false

# Agregar archivo .p10k.zsh personalizado que contiene funciones, alias, directorios custom/themes y custom/plugins

- name: Copiar archivo .p10k.zsh que contiene funciones personalizadas, alias y configuración del shell [usuario]
  become_user: kali
  ansible.builtin.copy:
    src: ../files/.p10k.zsh
    dest: $HOME/.p10k.zsh
    remote_src: false

- name: Copy .p10k.zsh file containing customized functions, aliases and shell configuration [root]
  become: true
  become_method: sudo
  ansible.builtin.copy:
    src: ../files/.p10k.zsh
    dest: /root/.p10k.zsh
    remote_src: false
