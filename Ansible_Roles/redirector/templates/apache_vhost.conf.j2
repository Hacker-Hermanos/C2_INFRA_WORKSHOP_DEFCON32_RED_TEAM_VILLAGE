<VirtualHost *:{{ item.http_port }}>

# Incluir <REDIRECTOR_DOMAIN>. Este es el dominio frontend al que el Implante C2 enviará tráfico y apunta a la IP del Redirector.
# Este archivo es una plantilla de configuración de Apache para configurar un servidor proxy reverso (redirector)

ServerName {{ item.redirector_domain }}
# Define el directorio raíz para los archivos del sitio web
DocumentRoot /var/www/html/{{ item.redirector_domain }}

# Configuración del nivel de registro (logging) de Apache
# https://httpd.apache.org/docs/2.4/mod/core.html#loglevel
# LogLevel alert rewrite:trace6

# Configuración para permitir listado de directorios (comentado por seguridad)
# <Directory /var/www/html>
#        Options Indexes FollowSymLinks
#        AllowOverride All
#        Require all granted
# </Directory>

# El Proxy Reverso (Redirector) preserva el encabezado "Host" original de la solicitud del cliente y lo envía al servidor backend
ProxyPreserveHost On
# Habilita el motor de reescritura de URLs de Apache
RewriteEngine On

# Define el objetivo de redirección (dominio señuelo)
DEFINE REDIR_TARGET {{ item.decoy_domain }}

# Define los servidores C2 backend (Teamservers)
# Esta sección configura las direcciones IP de los servidores C2 a los que se redirigirá el tráfico
{% if item.backend_teamservers is defined %}
{% for backend_teamserver in item.backend_teamservers %}
DEFINE {{ backend_teamserver.name }} {{ backend_teamserver.vpn_ip }}
{% endfor %}
{% endif %}

# Reglas de reescritura: Si la solicitud contiene "/<URI_PATH_C2_TRAFFIC>/", redirige a las IPs VPN de C2.
# Si no contiene "/<URI_PATH_C2_TRAFFIC>/", el tráfico coincidirá con la regla de reescritura para <DECOY_DOMAIN>.<TLD>.
Include /etc/apache2/redirect.rules

# Especifica los User Agents que serán bloqueados y redirigidos al dominio señuelo
RewriteCond %{HTTP_USER_AGENT} (google|yandex|bingbot|Googlebot|bot|spider|simple|BBBike|wget|cloudfront|curl|Python|Wget|crawl|baidu|Lynx|xforce|HTTrack|Slackbot|netcraft|NetcraftSurveyAgent|Netcraft|shodan) [NC]
RewriteRule ^(.*)$ %{REQUEST_SCHEME}://${REDIR_TARGET} [L,R=301]

# Sección para configuraciones previas personalizadas
{% if item.pre_configs is defined %}
{% for config in item.pre_configs %}
{{ config}}
{% endfor %}
{% endif %}

# Incluye archivos de configuración adicionales si están definidos
{% if item.config_files is defined %}
{% for config_file in item.config_files %}
{{ lookup('file', config_file) }} 
{% endfor %}
{% endif %}

# Encabezados HTTP requeridos - Redirige al dominio señuelo si faltan
{% if item.required_http_header is defined %}
{% for header in item.required_http_header %}
RewriteCond %{HTTP:{{ header }}} ^$
RewriteRule ^(.*)$ %{REQUEST_SCHEME}://${REDIR_TARGET} [L,R=301]
{% endfor %}
{% endif %}

# Define las rutas URI personalizadas
{% if item.uri_path_definitions is defined %}
{% for uri in item.uri_path_definitions %}
Define {{ uri.name }} {{ uri.path }}
{% endfor %}
{% endif %}

# Configuración de reglas de reescritura para filtrar y redirigir tráfico
{% if item.rewrite_rule_filters is defined %}
{% for c in item.rewrite_rule_filters %}
RewriteCond %{REQUEST_URI} {{ c.rewritefilter }}
RewriteRule ^(.*)$ %{REQUEST_SCHEME}://{{ c.backend_teamserver }}:{{ c.backend_forward_port }}%{REQUEST_URI} [P,NE,L]
ProxyPassReverse ^ %{REQUEST_SCHEME}://{{ c.backend_teamserver }}:{{ c.backend_forward_port }}%{REQUEST_URI} [P,NE]
{% endfor %}
{% endif %}

# Si ninguna de las reglas anteriores coincide, envía al dominio señuelo (por ejemplo, google.com)
RewriteRule ^(.*)$ %{REQUEST_SCHEME}://${REDIR_TARGET} [L,R=301]

# Ubicación personalizada para los archivos de registro
ErrorLog /var/www/html/{{ item.redirector_domain }}/logs/error.log
CustomLog /var/www/html/{{ item.redirector_domain }}/logs/access.log combined

# Define el directorio para almacenar logs y deniega el acceso a él por seguridad
<Directory /var/www/html/{{ item.redirector_domain }}/logs>
        Order deny,allow
        Deny from all
</Directory>

# Encabezados de Seguridad
# Esta sección configura varios encabezados HTTP para mejorar la seguridad del servidor
<IfModule mod_headers.c>
    # Previene el almacenamiento en caché del navegador
    Header set Cache-Control "no-store, no-cache, proxy-revalidate"
    Header set Pragma "no-cache"
    Header set Expires "0"
    # Fuerza HTTPS
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    # Política de seguridad de contenido
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; object-src 'none'; frame-ancestors 'self'; base-uri 'self'; form-action 'self'"
    # Protección contra XSS
    Header always set X-XSS-Protection "1; mode=block"
    # Previene el clickjacking
    Header always set X-Frame-Options "SAMEORIGIN"
    # Previene el MIME-type sniffing
    Header always set X-Content-Type-Options "nosniff"
    # Controla cómo se envía la información del referrer
    Header always set Referrer-Policy "strict-origin"
    # Define el tipo de contenido y codificación
    Header set Content-Type "text/html; charset=utf-8"
</IfModule>

</VirtualHost>
