---
# This is the variables file for the 'redirector' Ansible Role.
# Ansible roles are a way to package automation content and make it reusable.
# This file defines variables that are used to configure an Apache server as a reverse proxy.

vhosts_dictionary: [
    {
    # Configuration for a virtual host (vhost) in Apache.
    # A vhost allows Apache to serve different websites or applications from the same server.

        redirector_domain: '<REDIRECTOR_DOMAIN_TLD>',  # The domain name for the redirector.
        decoy_domain: '<DECOY_DOMAIN_TLD>',            # A secondary domain name, possibly used for decoy purposes.
        http_port: <HTTP_PORT>,                        # The port number for HTTP traffic (usually 80).
        https_port: <HTTPS_PORT>,                      # The port number for HTTPS traffic (usually 443).
        server_signature: "<SERVER_SIGNATURE>",        # The server signature string to be used in HTTP responses.

        backend_teamservers: [  # List of backend servers to which the proxy will forward requests.
            {
                name: '<Prod_C2_TeamServer_TS0>',      # Name identifier for the production team server.
                vpn_ip: '<PROD_C2_VPN_IP>'             # VPN IP address of the production team server.
            },
            {
                name: '<Dev_C2_TeamServer_TS1>',       # Name identifier for the development team server.
                vpn_ip: '<DEV_C2_VPN_IP>'              # VPN IP address of the development team server.
            }
        ],

        required_http_header: [  # List of HTTP headers that must be present in requests.
            '<REQUIRED_HTTP_HEADER_1>',               # Example of a required HTTP header.
            '<REQUIRED_HTTP_HEADER_2>',               # Another example of a required HTTP header.
            # '<ADDITIONAL_HEADER>' # Uncomment and add additional headers as needed.
        ],

        uri_path_definitions: [  # Definitions of URI paths that the proxy will handle.
            {
                name: '<URI_PATH_NAME_1>',            # Name identifier for the URI path.
                path: '<URI_PATH_1>'                  # The actual URI path.
            },
            {
                name: '<URI_PATH_NAME_2>',            # Another URI path name identifier.
                path: '<URI_PATH_2>'                  # The actual URI path.
            }
            # Add more URI path definitions as needed.
        ],

        rewrite_rule_filters: [  # Rules for rewriting URLs and forwarding them to backend servers.
            {
                rewritefilter: '<REWRITE_FILTER_1>',  # A pattern or condition for URL rewriting.
                backend_forward_port: '<BACKEND_PORT_1>',  # Port on the backend server to forward the request to.
                backend_teamserver: '${PROD_C2_VPN_IP}'    # Backend server's VPN IP to forward the request to.
            },
            {
                rewritefilter: '<REWRITE_FILTER_2>',  # Another URL rewriting pattern or condition.
                backend_forward_port: '<BACKEND_PORT_2>',  # Another backend port for forwarding.
                backend_teamserver: '${DEV_C2_VPN_IP}'     # Another backend server's VPN IP.
            }
            # Add more filters as needed.
        ]
    }
]
